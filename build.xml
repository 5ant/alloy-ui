<?xml version="1.0"?>
<project name="Alloy" basedir="." default="release">
	<property name="project.dir" value="."/>
	<property name="release.name" value="alloy" />
	<property name="release.temp.dir" value="${project.dir}/resources/temp/alloy/" />
	<property name="release.version" value="0.1a"/>
	<property name="yui3.dir" value="${project.dir}/lib/yui3/" />
	<property name="yui3.file" value="yui3.zip" />

	<import file="resources/builder/bootstrap.xml"/>

	<target name="all" depends="build-aui, init-yui"/>

	<target name="build-aui" depends="build-components, build-modules, build-skins, clean"/>

	<target name="build-components" depends="remove-whitespace">
		<subant target="all">
			<fileset
				dir="${project.dir}/src/"
				excludes="build.xml"
				includes="**/build.xml"
			/>
		</subant>
	</target>

	<target name="build-modules">
		<subant target="all">
			<fileset
				dir="${project.dir}/src/aui-base/"
				includes="**/build.xml"
			/>
		</subant>

		<create-module-list/>
	</target>

	<target name="build-skins">
		<copy todir="${project.dir}/build/aui-skins" overwrite="true">
			<fileset dir="${project.dir}/src/aui-skins"/>
		</copy>
	</target>

	<target name="build-yui">
		<subant target="all">
			<fileset
				dir="${project.dir}/lib/yui3/src"
				excludes="build.xml"
				includes="**/build.xml"
			/>
		</subant>
		<subant target="init-yui"/>
	</target>

	<target name="clean">
		<delete includeemptydirs="true">
			<fileset dir="${project.dir}/src/" defaultexcludes="false">
				<include name="**/*build_tmp*/**" />
				<include name="**/*build_rollup_tmp*/**" />
			</fileset>
		</delete>
	</target>

	<target name="clean-release">
		<delete dir="${release.temp.dir}" />
		<delete file="${project.dir}/${release.name}-${release.version}.zip" />
	</target>

	<target name="init-yui">
		<echo>Initializing YUI Library.</echo>

		<delete dir="${yui3.dir}" />
		<unzip src="${project.dir}/lib/${yui3.file}" dest="${project.dir}/lib/" />

		<echo>Copying files from [${project.dir}/lib/yui3/build] to [${project.dir}/build].</echo>
		<copy todir="${project.dir}/build" overwrite="true">
			<fileset dir="${project.dir}/lib/yui3/build">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>

	<target name="release" depends="clean-release">
		<copy todir="${release.temp.dir}">
			<fileset dir="${project.dir}">
				<include name="build/**" />
				<include name="demos/**" />
				<include name="sandbox/**" />
				<include name="*.txt" />
			</fileset>
		</copy>

		<echo>Replacing @VERSION@ tokens</echo>

		<replaceregexp match="@VERSION@" replace="${release.version}" flags="g" byline="true">
			<fileset dir="${release.temp.dir}/" includes="version.txt"/>
			<fileset dir="${release.temp.dir}/build/" includes="**/aui-*.js"/>
        </replaceregexp>

		<echo>Creating Zip file ${release.name}.zip</echo>

		<zip basedir="${release.temp.dir}" destfile="${project.dir}/${release.name}-${release.version}.zip" />

		<delete dir="${release.temp.dir}" />
	</target>

	<target name="remove-whitespace">
		<echo>Removing trailing spaces of the source files.</echo>

		<replaceregexp match="[\t ]+$" replace="" flags="g" byline="true">
			<fileset dir="${project.dir}/src/" includes="*.js"/>
		</replaceregexp>
	</target>


	<!--
		YUI Docs ant tasks
	-->
	<property name="project.name" value="Alloy UI" />
	<property name="project.url" value="http://alloyui.com/api" />
	<property name="project.docs.dir" value="${project.dir}/resources/docs" />
	<property name="yui.version" location="3.0.0" />

	<property name="yuidoc.output.dir" location="${project.dir}/api" />
	<property name="yuidoc.home" location="${project.dir}/lib/yui-yuidoc" />
	<property name="yuidoc.exec" location="${yuidoc.home}/bin/yuidoc.py" />
	<property name="yuidoc.tmpdir" location="${project.docs.dir}/temp" />
	<property name="yuidoc.parsein.dir" location="${project.dir}/src" />
	<property name="yuidoc.template.dir" location="${project.docs.dir}/template" />

	<target name="build-doc" depends="clean-doc">
		<mkdir dir="${yuidoc.tmpdir}" />
		<mkdir dir="${yuidoc.tmpdir}/parsertmp" />

		<echo>Generating ${project.name} Documentation</echo>

		<exec executable="${yuidoc.exec}">
			<arg value="${yuidoc.parsein.dir}"/>
			<arg value="-p"/>
			<arg value="${yuidoc.tmpdir}/parsertmp"/>
			<arg value="-o" />
			<arg value="${yuidoc.output.dir}" />
			<arg value="-t" />
			<arg value="${yuidoc.template.dir}" />
			<arg value="-m" />
			<arg value="${project.name}" />
			<arg value="-Y" />
			<arg value="${yui.version}" />
			<arg value="-v" />
			<arg value="${release.version}" />
			<arg value="-u" />
			<arg value="${project.url}" />
		</exec>

		<echo>Removing Temp Built Files from ${yuidoc.tmpdir}</echo>
		<delete dir="${yuidoc.tmpdir}" />
	</target>

	<target name="clean-doc" description="Clean out build">
		<echo>Removing Documentation Built Files</echo>
		<delete dir="${yuidoc.tmpdir}" />
		<delete dir="${yuidoc.output.dir}" />
	</target>
</project>
