<project name="Alloy" default="release" basedir=".">
	<property file="compiler"/>
	<property name="compiler" value="yui"/>
	
	<property name="project.dir" value="../.."/>
	<property name="build.dir" value="${project.dir}/build" />
	<property name="demo.dir" value="${project.dir}/demos" />
	<property name="src.dir" value="${project.dir}/src" />
	<property name="css.src.dir" value="${src.dir}/css" />
	<property name="javascript.src.dir" value="${src.dir}" />
	<property name="resources.dir" value="${project.dir}/resources" />

	<property name="alloy.version" value="0.1a" />
	<property name="alloy.core.files" value="defaults.js, core.js" />

	<property name="yui3.file" value="yui_3.1.zip" />
	<property name="yui3.dir" value="${project.dir}/lib/yui/" />

	<property name="release.name" value="alloy" />
	<property name="release.dir" value="${build.dir}/${release.name}/" />

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${resources.dir}/lib/ant-contrib-0.6.jar"/>
		</classpath>
	</taskdef>

	<target name="create-module">
		<propertyregex
			property="module.base.name"
			input="${module.name}"
			regexp="aui-"
			replace=""
			global="false"
			defaultValue="${module.name}"
		/>

		<property name="module.demo.dir" value="${demo.dir}/${module.base.name}" />
		<property name="module.src.dir" value="${javascript.src.dir}/${module.name}" />
		<property name="module.js.dir" value="${module.src.dir}/js" />
		<property name="module.css.dir" value="${module.src.dir}/assets" />

		<if>
			<available file="${module.demo.dir}" />
			<then>
				<echo message="${module.demo.dir} already exists." />
			</then>
			<else>
				<mkdir dir="${module.demo.dir}" />
				<mkdir dir="${module.src.dir}" />
				<mkdir dir="${module.css.dir}" />
				<mkdir dir="${module.js.dir}" />

				<copy todir="${module.demo.dir}">
					<fileset dir="${resources.dir}/templates/">
						<include name="**/module_template.*" />
					</fileset>
				</copy>

				<move todir="${module.demo.dir}">
					<fileset dir="${module.demo.dir}">
						<include name="**/module_template.*"/>
					</fileset>

					<mapper type="glob" from="module_template.*" to="${module.name}.*"/>
				</move>

				<replace dir="${module.demo.dir}">
					<replacefilter token="@module.name@" value="${module.name}" />
					<replacefilter token="@module.base.name@" value="${module.base.name}" />
				</replace>

				<!-- Demo index file -->
				<move
					file="${module.demo.dir}/${module.name}.html"
					tofile="${module.demo.dir}/index.html"
					overwrite="no"
				/>

				<!-- CSS file -->
				<move
					file="${module.demo.dir}/${module.name}.css"
					tofile="${module.css.dir}/${module.name}-core.css"
					overwrite="no"
				/>

				<!-- JS file -->
				<move
					file="${module.demo.dir}/${module.name}.js"
					tofile="${module.js.dir}/${module.name}.js"
					overwrite="no"
				/>

				<!-- XML build file -->
				<move
					file="${module.demo.dir}/${module.name}.xml"
					tofile="${module.src.dir}/build.xml"
					overwrite="no"
				/>

				<!-- Properties file -->
				<move
					file="${module.demo.dir}/${module.name}.properties"
					tofile="${module.src.dir}/build.properties"
					overwrite="no"
				/>
			</else>
		</if>
	</target>
</project>