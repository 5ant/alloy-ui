AUI.add("aui-diagram-builder-connector",function(w){var h=w.Lang,s=h.isArray,p=h.isBoolean,q=h.isObject,t=h.isString,D=w.Array,b=function(A){return(A instanceof w.Graphic);},o="anchor",r="arrowPoints",k="builder",j="click",l="color",g="connector",c="diagramNode",a="fill",d="graphic",C="lazyDraw",z="mouseenter",n="mouseleave",m="name",f="p1",e="p2",E="path",i="selected",x="shape",u="shapeHover",v="shapeSelected",B="stroke",y="visible";w.PolygonUtil={ARROW_POINTS:[[-12,-6],[-8,0],[-12,6],[6,0]],drawLineArrow:function(G,H,J,F,I,K){var A=this;G.moveTo(H,J);G.lineTo(F,I);var L=Math.atan2(I-J,F-H);F=F-5*Math.cos(L);I=I-5*Math.sin(L);A.drawPolygon(G,A.translatePoints(A.rotatePoints(K||A.ARROW_POINTS,L),F,I));},drawPolygon:function(F,G){var A=this;F.moveTo(G[0][0],G[0][1]);D.each(G,function(I,H){if(H>0){F.lineTo(G[H][0],G[H][1]);}});F.lineTo(G[0][0],G[0][1]);},translatePoints:function(G,F,I){var A=this;var H=[];D.each(G,function(K,J){H.push([G[J][0]+F,G[J][1]+I]);});return H;},rotatePoints:function(F,H){var A=this;var G=[];D.each(F,function(J,I){G.push(A.rotatePoint(H,F[I][0],F[I][1]));});return G;},rotatePoint:function(F,A,G){return[(A*Math.cos(F))-(G*Math.sin(F)),(A*Math.sin(F))+(G*Math.cos(F))];}};w.Connector=w.Base.create("line",w.Base,[],{SERIALIZABLE_ATTRS:[l,C,m,v,u,f,e],shape:null,initializer:function(G){var A=this;var F=A.get(C);A.after({p1Change:A.draw,p2Change:A.draw,selectedChange:A._afterSelectedChange});A._initShapes();if(!F){A.draw();}A._uiSetSelected(A.get(i),!F);},destroy:function(){var A=this;A.shape.destroy();},draw:function(){var A=this;var F=A.shape;var H=A.getCoordinate(A.get(f));var G=A.getCoordinate(A.get(e));F.clear();w.PolygonUtil.drawLineArrow(F,H[0],H[1],G[0],G[1],A.get(r));F.end();return A;},getCoordinate:function(G){var A=this;var F=A.get(d).getXY();return[G[0]-F[0],G[1]-F[1]];},getProperties:function(){var A=this;var F=A.getPropertyModel();D.each(F,function(G){G.value=A.get(G.attributeName);});return F;},getPropertyModel:function(){var F=this;var G=F.get(o);var A=G?G.get(c).getStrings():{};return[{attributeName:m,editor:new w.TextCellEditor({validator:{rules:{value:{required:true}}}}),name:A[m]}];},hide:function(){var A=this;A.shape.set(y,false);return A;},show:function(){var A=this;A.shape.set(y,true);return A;},toJSON:function(){var A=this;var F={};D.each(A.SERIALIZABLE_ATTRS,function(G){F[G]=A.get(G);});return F;},_afterSelectedChange:function(F){var A=this;A._uiSetSelected(F.newVal);},_initShapes:function(){var A=this;var F=A.shape=A.get(d).addShape(A.get(x));F.on(j,w.bind(A._onShapeClick,A));F.on(z,w.bind(A._onShapeMouseEnter,A));F.on(n,w.bind(A._onShapeMouseLeave,A));},_onShapeClick:function(H){var A=this;var F=A.get(k);var G=A.get(i);if(F){if(H.hasModifier()){F.closeEditProperties();}else{F.unselectConnectors();if(G){F.closeEditProperties();}else{F.editConnector(A);}}}A.set(i,!G);},_onShapeMouseEnter:function(G){var A=this;if(!A.get(i)){var F=A.get(u);if(F){A._updateShape(F);}}},_onShapeMouseLeave:function(F){var A=this;if(!A.get(i)){A._updateShape(A.get(x));}},_setShape:function(F){var A=this;return w.merge({type:E,stroke:{color:A.get(l),weight:3},fill:{color:A.get(l)}},F);},_uiSetSelected:function(G,F){var A=this;A._updateShape(G?A.get(v):A.get(x),F);},_updateShape:function(H,F){var A=this;var G=A.shape;if(H.hasOwnProperty(a)){G.set(a,H[a]);}if(H.hasOwnProperty(B)){G.set(B,H[B]);}if(F!==false){A.draw();}}},{ATTRS:{arrowPoints:{value:w.PolygonUtil.ARROW_POINTS},builder:{},color:{value:"#27aae1",validator:t},graphic:{validator:b},lazyDraw:{value:false,validator:p},name:{valueFn:function(){var A=this;return g+(++w.Env._uidx);},validator:t},p1:{value:[0,0],validator:s},p2:{value:[0,0],validator:s},selected:{value:false,validator:p},shape:{value:null,setter:"_setShape"},shapeHover:{value:{fill:{color:"#666"},stroke:{color:"#666",weight:5}}},shapeSelected:{value:{fill:{color:"#000"},stroke:{color:"#000",weight:5}}},transition:{value:{},validator:q}}});},"@VERSION@",{requires:["aui-base","arraylist-add","arraylist-filter","json","graphics","dd"],skinnable:true});